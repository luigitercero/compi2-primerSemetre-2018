package html.org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;
import com.ParserTree.Node;
import com.ParserTree.ParserTree;
import com.ParserTree.Location;
import com.ParserTree.Term;
import com.ParserTree.Token;
import compi2.Etiqueta.*;
import java.awt.Component;
import java.util.ArrayList;
import compi2.Etiqueta.Componente.*;
import css.org.compi2.codigo3d.CompilarCSS;
//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code 
{://Codigo visible
 public ParserTree parserTree;
public ArrayList<Symbol> error = new ArrayList<Symbol>();
public CHTML chtml = new CHTML();


    public String ruta ="";

   public observador.errores.RecibirError enviar = chtml;
    public String enviarError(String s){
        if (enviar != null){
            enviar.recibirError(ruta +"\n   "+s);
        }
    return s;
    }
    
    public void syntax_error(Symbol s){
    System.err.println( enviarError("Error Sintactico en la Linea  " + (s.right+1) +" Columna "+s.left+ ". Simbolo \'" +s.value + "\' no reconocido." ));

    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
         System.err.println(enviarError("Error Sintactico en la Linea no se logro recuperar de error" + (s.right+1)+ "Columna "+s.left+". " + s.value + " no reconocido."));
        //this.error.add(s);
        //System.err.println(s);
    }

:}

action code
{://Codigo de acciones
     public Color color = new Color (); 
:}
/*
terminal String ID, ENTERO, DECIMAL, FIN, IGUAL, PAREA, PAREC,AID,HOLA;
terminal String  MAYORQUE,DOSPUNTOS,CADENA,MENOS,EXPRESION,CUALQUIERA;
terminal String CHTML,SALTOFIN,PUNTOCOMA,
FINCHTML,ENCABEZADO,FINENCABEZADO,CJS,FINCJS,CCSS,FINCCSS,CUERPO,FINCUERPO,TITULO,FINTITULO,PANEL,FINPANEL,TEXTO,FINTEXTO,CAJA,FINCAJA,IMAGEN,FINIMAGEN,BOTON,FINBOTON,ENLACE,FINENLACE,TABLA,FINTABLA,FIL,FINFIL,CB,FINCB,CT,FINCT,TEXTOA,FINTEXTOA;

nonterminal CHTML chtmlAtributos,componente,fila,columna,
cuerpoTerminal,Larchivo;
nonterminal String archivo;
nonterminal ParserTree inicial,fin,textos,expresion,otra,html,arbolo,arbol,atributos,latributos,atributo,cualquier;
nonterminal Node dato,texto,chtml,encabezado,cuerpo,archivos,tabla;

*/



terminal String ID, ENTERO, DECIMAL, FIN, IGUAL, PAREA, PAREC,AID,HOLA;
terminal String  MAYORQUE,DOSPUNTOS,CADENA,MENOS,EXPRESION,CUALQUIERA;
terminal String SALTOFIN,PUNTOCOMA,FINCHTML,CHTML,CAJATEXTO,FINCAJATEXTO,
FINCHTM,ENCABEZADO,FINENCABEZADO,CJS,FINCJS,CCSS,FINCCSS,CUERPO,FINCUERPO,TITULO,FINTITULO,PANEL,FINPANEL,TEXTO,FINTEXTO,CAJA,FINCAJA,IMAGEN,FINIMAGEN,BOTON,FINBOTON,ENLACE,FINENLACE,TABLA,FINTABLA,FIL,FINFIL,CB,FINCB,CT,FINCT,TEXTOA,
FINTEXTOA,OPCION,

FINOPCION;
nonterminal String chtmlAtributos,componente,fila,columna,
Larchivo;
nonterminal Caja caja,cajaCuerpo,cajaAtributo;
nonterminal Boton boton;
nonterminal Texto textoc,atributoOpcion;
nonterminal Imagen imagena;
nonterminal Enlace enlace;
nonterminal Texto_A textoa;
nonterminal Caja_Texto cajatexto;
nonterminal CHTML Lcuerpo,Acuerpo;
 nonterminal Component cuerpoTerminal;
 nonterminal  Panel panel,LcuerpoTerminal,panelCuerpo;
nonterminal String archivo;
nonterminal String inicial,fin,textos,expresion,otra,html,arbolo,arbol,atributos,latributos,atributo,cualquier;
nonterminal String dato,texto,chtml,encabezado,cuerpo,archivos,tabla;
nonterminal String enlaceCuerpo,botonCuerpo,cuepoOpcion,opcion;
precedence left MAYORQUE;


precedence left MAYORQUE;

start with inicial;

inicial ::= html{:this.parser.chtml.notificar("fin", "listo");:};

html::= chtml  encabezado  ;


encabezado::= ENCABEZADO  MAYORQUE archivos FINCHTML  MAYORQUE
              | FINCHTML MAYORQUE
              |ENCABEZADO  MAYORQUE archivos cuerpo FINCHTML  MAYORQUE
              |cuerpo FINCHTML  MAYORQUE
              |error:a {:Texto t = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);


        :}
              ;

cuerpo ::=   Lcuerpo FINCUERPO MAYORQUE
    ;

Lcuerpo::= Acuerpo:a  MAYORQUE{: RESULT= a; :}
    | Lcuerpo cuerpoTerminal
    | Lcuerpo:b panel:a {:b.addPanel(a); RESULT = b;:}
    | Lcuerpo:b SALTOFIN MAYORQUE {:b.addSalto();RESULT = b;:}
     |error:a {:Texto t = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);
        t.addText(a.toString());
        :}
    ;


Acuerpo::= CUERPO{:RESULT = this.parser.chtml;:}
         | Acuerpo:a ID IGUAL CADENA:c PUNTOCOMA  {:a.setBackground(color.getColor(c)); RESULT = a;:}
         ;

panel::= LcuerpoTerminal:a FINPANEL MAYORQUE {:RESULT = a ;:} ;


LcuerpoTerminal ::=  panelCuerpo:a MAYORQUE {:RESULT =a;:}
    | LcuerpoTerminal:a cuerpoTerminal:b{:a.addComponent(b);RESULT = a;:}
    | LcuerpoTerminal:b panel:a {:b.addPanel(a); RESULT = b;:}
    | LcuerpoTerminal:b SALTOFIN MAYORQUE {:b.addSalto();RESULT = b;:}
    
;

panelCuerpo ::= PANEL {:RESULT = new Panel(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    | panelCuerpo:a ID:b IGUAL CADENA:c PUNTOCOMA {:a.addAtributo(b,c);RESULT =a;:}
   
    ;
cuerpoTerminal::=
     boton:a MAYORQUE botonCuerpo:b MAYORQUE  {:a.addText(b); this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo"); RESULT = a;:}
    |textoc:a FINTEXTO:b MAYORQUE              {:a.addTexta(b);  this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo"); RESULT = a;:}
    |cajatexto:a FINCAJATEXTO:b MAYORQUE      {:a.addTexta(b);  this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo"); RESULT = a;:}
   
    |imagena:a MAYORQUE textos:b FINIMAGEN MAYORQUE {:a.addImagen(b);  this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo"); RESULT = a;:}
    |enlace:a MAYORQUE:b enlaceCuerpo:c MAYORQUE {:a.addText(c);  this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo");  RESULT = a;:} 
    |textoa:a FINTEXTOA:b  MAYORQUE           {:a.addTexta(b);  this.parser.chtml.componetesCSSI.add(a); this.parser.chtml.notificar(a.id, "listo"); RESULT = a;:}
    |tabla
    |error:a {:Texto t = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas); RESULT = t;:}
    |caja:a {:RESULT = a;:} 
    //| opcion {:Texto t = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);RESULT = t;:}
;


    
enlaceCuerpo ::= FINENLACE{:RESULT = "";:}
    | ID:a FINENLACE {:RESULT = a;:}
    ;
botonCuerpo::= ID:b FINBOTON{:RESULT = b;:}
    |FINBOTON{:RESULT = "";:}
    ;

caja::= cajaCuerpo:a  FINCAJA MAYORQUE {:RESULT = a;:}  ;

cajaCuerpo::= cajaAtributo:a MAYORQUE{:RESULT = a;:} 
        |cajaCuerpo:a opcion:b {:a.addItem(b); RESULT =a;:}
;
cajaAtributo::= CAJA {: RESULT = new Caja(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas); :}
    |cajaAtributo:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT = a ;:}
    ;

opcion::= atributoOpcion:a MAYORQUE cuepoOpcion:b MAYORQUE{: a.addText(b); RESULT = b;:};

cuepoOpcion::= textos:a FINOPCION {:RESULT =a ;:}
    |FINOPCION {:RESULT ="" ;:}
; 
atributoOpcion::=OPCION{:RESULT = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    | atributoOpcion:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT =a;:}
    ;



boton ::=  BOTON {:Boton a = new Boton(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);   RESULT = a;:}
    | boton:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT = a ;:}
     |boton:a error{:RESULT =a;:}
    ;
textoc::=TEXTO{:RESULT = new Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    |textoc:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT =a;:}
     |textoc:a error{:RESULT =a;:}
    ;
    
imagena::=IMAGEN{:RESULT = new Imagen(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    |imagena:c ID:a IGUAL CADENA:b PUNTOCOMA{:c.addAtributo(a,b); RESULT = c;:}
     |imagena:a error{:RESULT =a;:}
    ;
enlace::=ENLACE{:RESULT = new Enlace(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    |enlace:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT =a;:}
     |enlace:a error{:RESULT =a;:}
    ;
textoa::=TEXTOA{:RESULT = new Texto_A(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    |textoa:a ID:b IGUAL CADENA:c PUNTOCOMA{:a.addAtributo(b,c); RESULT =a;:}
     |textoa:a error{:RESULT =a;:}
    ;
cajatexto::=CAJATEXTO{:RESULT = new Caja_Texto(this.parser.chtml.css,this.parser.chtml.observadores,this.parser.chtml.Observadorrutas);:}
    |cajatexto:a ID:b IGUAL CADENA:c {:a.addAtributo(b,c); RESULT =a;:}
    |cajatexto:a error{:RESULT =a;:}
    ;

tabla::=   TABLA fila FINTABLA ;
fila::=    FIL  columna     FINFIL ;
columna::= CB  textos FINCB ;


archivos ::= Larchivo:a FINENCABEZADO MAYORQUE {:RESULT = a;:}| 
            FINENCABEZADO MAYORQUE{:RESULT = "defautlt";:};
Larchivo ::= Larchivo:b archivo:a{:RESULT = a+b;:}
            |  archivo:a {:RESULT = a;:} ;

archivo ::= 
       CJS ID IGUAL CADENA:a PUNTOCOMA MAYORQUE FINCJS MAYORQUE {:
            

                try {
                  
                    com.Navegador.JS.JS c = new  com.Navegador.JS.JS(a,this.parser.chtml,this.parser.chtml);
                    this.parser.chtml.enlazarObservador(c.js);
                     c.js.cssi = this.parser.chtml.componetesCSSI;
                    
                } catch (Exception e) {
                    System.err.println("error al compilar arcihivo " + a);
                }
                

            System.out.println("cargar cjs " + a); RESULT ="";:}
    | CCSS ID IGUAL CADENA:a PUNTOCOMA  MAYORQUE FINCCSS MAYORQUE{:  
                CompilarCSS c;
                try {
                  c = new CompilarCSS(a,this.parser.chtml,this.parser.chtml);
                  this.parser.chtml.css.add(c.getParser().css);
                } catch (Exception e) {
                    System.err.println("error al compilar arcihivo " + a);
                }
                 RESULT = "";
                 :}
    | TITULO MAYORQUE ID:a FINTITULO MAYORQUE{: System.out.println("el TITULO es " + a); RESULT = a;:}
    ;

chtml::= CHTML MAYORQUE;




textos ::= 
    textos:a texto:b{: a = a + b; RESULT = a;:}
    |texto:a {: RESULT =a;:}
    ;

texto ::= 
    ID:b {:           RESULT = b; :}
    |CUALQUIERA:b {:  RESULT = b; :}
    |ENTERO:b {:      RESULT = b; :} 
    | MAYORQUE:b{:    RESULT = b; :} 
    | IGUAL:b{:       RESULT = b; :} 
    | PAREA:b{:       RESULT = b; :} 
    | PAREC:b{:       RESULT = b; :} 
    | MENOS:b{:       RESULT = b; :} 
    | DOSPUNTOS:b{:   RESULT = b; :} 
    ;








/*
inicial ::= html:a{:this.parser.parserTree =a ; RESULT = a;:};

html ::= 
    CHTML:a atributos:b FINCHTML MAYORQUE{:
            ParserTree arbol = new ParserTree("html");  
            Node id = new Node(new Term("AID"),new Token(new Location(aleft,aright),a,"ID"));
            arbol.addChildren(id);
            arbol.addChildren(b);
            RESULT = arbol;
        :}
       | AID:a error:b fin:c
        {:
        Node nodo = new Node(new Term("error"), new Token(new Location(bleft,bright),b,"error"));
        ParserTree arbol = new ParserTree("html");  
            Node id = new Node(new Term("AID"),new Token(new Location(aleft,aright),a,"ID"));
            arbol.addChildren(id);
            arbol.addChildren(nodo);
            arbol.addChildren(c);

         RESULT = arbol;
        :}
        | error:b fin:c
        {:
        Node nodo = new Node(new Term("error"), new Token(new Location(bleft,bright),b,"error"));
        ParserTree arbol = new ParserTree("html");  
            
            arbol.addChildren(nodo);
            arbol.addChildren(c);
      

         RESULT = arbol;
        :}
    ;

atributos::= 
    atributo:a MAYORQUE{:RESULT = a;:}
    |MAYORQUE
        {:ParserTree arbol = new ParserTree("nanda");RESULT = arbol;:}
    ;

atributo ::= 
    atributo:b latributos:a 
        {:
        System.out.println("PRODUCCION ATRIBUTOS");
            b.addChildren(a);
            RESULT = b;
        :}
    |latributos:a 
        {:
        System.out.println("PRODUCCION ATRIBUTOS");
        RESULT = a;:}
    ;
  

  latributos ::= 
    ID:a IGUAL dato:b DOSPUNTOS
         {: 
         System.out.println("PRODUCCION latributos");
         Node id = new Node(new Term("ID"),new Token(new Location(aleft,aright),a,"ID")); 
            Node padre = new Node (new Term("atributo"));
            ParserTree arbol = new ParserTree (padre);
            arbol.addChildren(id);
            arbol.addChildren(b);
            RESULT = arbol;
        :}
    ;


dato ::= 
    CADENA:a
        {: System.out.println("PRODUCCION cadena");
        Node nodo = new Node(new Term("cadena"),new Token(new Location(aleft,aright),a,"cadena")); 
        RESULT = nodo;:}
    |ID:a
        {:
         System.out.println("PRODUCCION id");Node nodo = new Node(new Term("ID"),new Token(new Location(aleft,aright),a,"ID")); RESULT = nodo;:}
    |ID:a PAREA PAREC
        {:
        System.out.println("PRODUCCION metodo");
        Node nodo = new Node(new Term("Metodo"),new Token(new Location(aleft,aright),a,"Metodo")); RESULT = nodo;:}
    |ENTERO:a
        {:System.out.println("PRODUCCION entero");
        Node nodo = new Node(new Term("entero"),new Token(new Location(aleft,aright),a,"entero")); RESULT = nodo;:}
  ;


fin ::= 
    arbolo:c FIN:b MAYORQUE
        {:ParserTree arbol = new ParserTree("final"); 
          Node fin = new Node(new Term("FIN"),new Token(new Location(bleft,bright),b,"FIN"));
          arbol.addChildren(c);
          arbol.addChildren(fin);
          RESULT = arbol;
        :}
    | FIN:b MAYORQUE
        {:ParserTree arbol = new ParserTree("final"); 
          Node fin = new Node(new Term("FIN"),new Token(new Location(bleft,bright),b,"FIN"));
          arbol.addChildren(fin);
          RESULT = arbol;
        :}    
    ;

arbolo ::= 
    arbol:a{:RESULT = a;:}
    |textos:a{:RESULT = a;:}
   ;



arbol ::=
    arbolo:b html:a
        {:b.addChildren(a);
            RESULT=b;
            :}
        |html:a {:RESULT=a;:}    
    ;
*/

