
package compi1p1;

import java.io.BufferedReader;
import java.io.StringReader;

import analizadores.parser;
import analizadores.scanner;
import Creador.TextLineNumber;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.UIManager;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.metal.MetalLookAndFeel;
/**
 *
 * @author oswald
 */
public class Traductor extends javax.swing.JFrame {
    
    JTextArea[] tabsvb = new JTextArea[10];
    JTextArea[] tabsjv = new JTextArea[10];
    JButton[] cierrevb = new JButton[10];
    JButton[] cierrejv = new JButton[10];
    JLabel[] nombrevb = new JLabel[10];
    JLabel[] nombrejv = new JLabel[10];
    boolean[] guardadovb = new boolean[10];
    boolean[] guardadojv = new boolean[10];
    String[] archivovb = new String[10];
    String[] archivojv = new String[10];
    String[] ubicavb = new String[10];
    String[] ubicajv = new String[10];
    String[] prueba = new String[10];
    
    int NoTabvb = 0;
    int NoTabjv = 0;
    
    Tab pestana;
    Tab cabeza;

    /**
     * Creates new form Traductor
     */
    public Traductor() {
        initComponents();
        cabeza = new Tab(null,null,null,null,null,null,"",false,"",0,null);
        this.setTitle("Traductor VB - Java");
        nuevaTabvb2("Visual Basic", NoTabvb);
        cabeza.setSiguiente(nuevaTabjv2("Java",NoTabvb));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Paneles1 = new javax.swing.JTabbedPane();
        Paneles2 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Monitor = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        nuevaClase = new javax.swing.JMenuItem();
        abrirClase = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        guardarClase = new javax.swing.JMenuItem();
        guardarClaseComo = new javax.swing.JMenuItem();
        guardarTraduccion = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Paneles1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Paneles1.setAutoscrolls(true);

        Paneles2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Paneles2.setAutoscrolls(true);

        jLabel1.setText("Fila: 0 Columna: 0");

        jLabel2.setText("Fila: 0 Columna: 0");

        jButton2.setText("Traducir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Monitor");

        Monitor.setColumns(20);
        Monitor.setRows(5);
        jScrollPane1.setViewportView(Monitor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        nuevaClase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        nuevaClase.setText("Nueva Clase");
        nuevaClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaClaseActionPerformed(evt);
            }
        });
        jMenu1.add(nuevaClase);

        abrirClase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        abrirClase.setText("Abrir Clase");
        abrirClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirClaseActionPerformed(evt);
            }
        });
        jMenu1.add(abrirClase);

        jMenu3.setText("Guardar");

        guardarClase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        guardarClase.setText("Guardar Clase");
        jMenu3.add(guardarClase);

        guardarClaseComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        guardarClaseComo.setText("Guardar Clase Como...");
        jMenu3.add(guardarClaseComo);

        guardarTraduccion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        guardarTraduccion.setText("Guardar Traduccion");
        jMenu3.add(guardarTraduccion);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setText("Guardar Traduccion Como...");
        jMenu3.add(jMenuItem11);

        jMenu1.add(jMenu3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Cerrar Clase");
        jMenu1.add(jMenuItem5);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Paneles1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(Paneles2, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Paneles2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Paneles1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jButton2))
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevaClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaClaseActionPerformed
        if (NoTabvb <10){
            //nuevaTabvb("Visual Basic");
            nuevaTabvb2("Visual Basic",NoTabvb);
            agregarTab(nuevaTabjv2("Java",NoTabvb));
        }else{
            JOptionPane.showMessageDialog(null, "Se a alcanzado el numero maximo de paneles","Information",JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_nuevaClaseActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Tab tabActual;
        int TabA = Paneles1.getSelectedIndex();
        tabActual = buscarTab(TabA);
        escribirMonitor(""+TabA);
        String texto = tabActual.getTexto().getText();
        String a = ""; 
        if(texto.isEmpty()){
            JOptionPane.showMessageDialog(null, "No se puede analizar una cadena en blanco","Alerta",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            escribirMonitor("----------------------------------------------------------------------------------");
            escribirMonitor("Iniciando Traducción del archivo: " + Paneles1.getTitleAt(TabA));
            
            scanner scan = new scanner(new BufferedReader( new StringReader(texto)));
            parser parser = new parser(scan);
            parser.parse();
            escribirMonitor("Generando Codigo " +parser.nombreclase + ".java");  
            escribirMonitor(scan.erroresl);
              
            
            tabActual.getPareja().getTitulo().setText(parser.nombreclase + ".java");
            
            tabActual.getPareja().getTexto().setText("");
            tabActual.getPareja().getTexto().setText(parser.salida);
            escribirMonitor("Finalizada traduccion exitosamente.");
            tabActual.getTitulo().setText(parser.nombreclase + ".vb");
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void abrirClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirClaseActionPerformed
        if (NoTabvb <10){
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.vb","vb");
            fileChooser.setFileFilter(filter);
            File selectedFile = null;
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")+"/Documents"));
            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();
            }
        try{
            String[] partes = selectedFile.getAbsolutePath().split("/");
            String nombre = partes[partes.length -1];
            String[] partes2 = nombre.split("\\.");
            int libre = check();
            nuevaTabvb2(nombre,libre);
            nuevaTabjv2(partes2[0]+".java",libre);
            FileReader reader = new FileReader( selectedFile );
            BufferedReader br = new BufferedReader(reader);
            pestana[libre].getTexto().read( br, null );
            br.close();
            pestana[libre].getTexto().requestFocus();
            pestana[libre].setArchivo(selectedFile.getAbsolutePath()); 
            pestana[libre].setGuardado(true);
            pestana[libre].setUbica(selectedFile.getParent());
        }catch(Exception e2) {System.out.println(e2);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Se a alcanzado el numero maximo de paneles");
        }
    }//GEN-LAST:event_abrirClaseActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       Tab temporal = cabeza.getSiguiente();
        while (temporal != null){
            escribirMonitor("" + temporal.getNoboton());
            temporal = temporal.getSiguiente();
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        try {
            /* Set the Nimbus look and feel */
            
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            UIManager.getDefaults().put("TabbedPane.contentBorderInsets", new Insets(0,0,0,0));
            UIManager.getDefaults().put("TabbedPane.tabsOverlapBorder", true);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Traductor.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Traductor().setVisible(true);
            }
        });
    }
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Monitor;
    private javax.swing.JTabbedPane Paneles1;
    private javax.swing.JTabbedPane Paneles2;
    private javax.swing.JMenuItem abrirClase;
    private javax.swing.JMenuItem guardarClase;
    private javax.swing.JMenuItem guardarClaseComo;
    private javax.swing.JMenuItem guardarTraduccion;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem nuevaClase;
    // End of variables declaration//GEN-END:variables


    private void escribirMonitor(String texto) {
        if (Monitor.getText().isEmpty()){
           Monitor.append("-"+texto); 
        }else{
           Monitor.append("\n-"+texto); 
        }
            
    }

    private void escribirMonitor(ArrayList<String> erroresl) {
        Iterator it = erroresl.iterator();
        while (it.hasNext()) {
            escribirMonitor(""+it.next());
        }
    }

    private void nuevaTabvb2(String Titulo,int index) {
        
        JTextArea texto = new JTextArea();
        texto.setText("");
        texto.setAutoscrolls(true);
        texto.addCaretListener(new CaretListener(){
            public void caretUpdate(CaretEvent e) {
                JTextArea editArea = (JTextArea)e.getSource();

                int linea = 1;
                int columna = 1;
 
                try {
                    int caretpos = editArea.getCaretPosition();
                    linea= editArea.getLineOfOffset(caretpos);
                    columna = caretpos - editArea.getLineStartOffset(linea);
                    linea += 1;
                   jLabel1.setText("Linea: "+linea+" Columna: "+ columna);
                } catch(Exception ex) { }
            }
        });
        JScrollPane scroll = new JScrollPane (texto, 
        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        TextLineNumber tln = new TextLineNumber(texto);
        scroll.setRowHeaderView( tln );
        //Paneles1.add(scroll,Titulo);
        pestana = new Tab(texto,scroll,null,null,null,null,"",false,"",NoTabvb,null);
        Paneles1.addTab(""+index, pestana.getScroll());
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setOpaque(false);
        JLabel label = new JLabel(Titulo);
        JButton boton = new JButton(""+index);
        boton.setMargin(new Insets(0, 0 , 0, 0));
        boton.setBorder(BorderFactory.createEmptyBorder());
        boton.setPreferredSize(new Dimension(15,15));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1;

        panel.add(label, gbc);

        gbc.gridx++;
        gbc.weightx = 0;
        panel.add(boton, gbc);
        
        boton.addActionListener( new MyCloseActionHandler(index));
        
        pestana.setTitulo(label);
        pestana.setCerrar(boton);
        pestana.setPanel(panel);
        pestana.setNoboton(index);

        Paneles1.setTabComponentAt(NoTabvb, pestana.getPanel());
        Paneles1.setSelectedIndex(NoTabvb);
        
        
        
        
        
        
        
        
        
    }

    private Tab nuevaTabjv2(String Titulo,int index) {
        JTextArea texto = new JTextArea();
        texto.setText("");
        texto.setAutoscrolls(true);
        texto.addCaretListener(new CaretListener(){
            public void caretUpdate(CaretEvent e) {
                JTextArea editArea = (JTextArea)e.getSource();

                int linea = 1;
                int columna = 1;
 
                try {
                    int caretpos = editArea.getCaretPosition();
                    linea= editArea.getLineOfOffset(caretpos);
                    columna = caretpos - editArea.getLineStartOffset(linea);
                    linea += 1;
                   jLabel2.setText("Linea: "+linea+" Columna: "+ columna);
                } catch(Exception ex) { }
            }
        });
        JScrollPane scroll = new JScrollPane (texto, 
        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        TextLineNumber tln = new TextLineNumber(texto);
        scroll.setRowHeaderView( tln );
        //Paneles1.add(scroll,Titulo);
        Tab Tjava = new Tab(texto,scroll,null,null,null,null,"",false,"",index,null);
        Paneles2.addTab(""+index, Tjava.getScroll());
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setOpaque(false);
        JLabel label = new JLabel(Titulo);
        JButton boton = new JButton(""+index);
        boton.setMargin(new Insets(0, 0 , 0, 0));
        boton.setBorder(BorderFactory.createEmptyBorder());
        boton.setPreferredSize(new Dimension(15,15));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1;

        panel.add(label, gbc);

        gbc.gridx++;
        gbc.weightx = 0;
        panel.add(boton, gbc);
        
        boton.addActionListener( new MyCloseActionHandler(index));
        
        Tjava.setTitulo(label);
        Tjava.setCerrar(boton);
        Tjava.setPanel(panel);
        Tjava.setNoboton(index);

        Paneles2.setTabComponentAt(NoTabvb, Tjava.getPanel());
        Paneles2.setSelectedIndex(NoTabvb);
        
        Tjava.setPareja(pestana);
        pestana.setPareja(Tjava);
        
        
        NoTabvb++;
        
        return pestana;
    }

    
           
        

    private void agregarTab(Tab Tab) {
        debug();
        if (cabeza.getSiguiente() == null){
            cabeza.setSiguiente(Tab);
        }else{
            Tab temporal = cabeza.getSiguiente();
            while(temporal.getSiguiente() != null){
                temporal = temporal.getSiguiente();
            }
            temporal.setSiguiente(Tab);
            
        }
        
        
        
        
    }

    private Tab buscarTab(int TabA) {
        Tab temporal = cabeza.getSiguiente();
        while(temporal.getNoboton() != TabA){
            temporal = temporal.getSiguiente();
        }
        return temporal;
    }
    
    public class MyCloseActionHandler implements ActionListener {

    private int index;

    public MyCloseActionHandler(int index) {
        this.index = index;
    }

    public int getTabName() {
        return index;
    }

    public void actionPerformed(ActionEvent evt) {
        int remover;
        
        if (index >= 0) {
            
           

        }

    }

       

        

}  
     private void debug() {
            int x = 0;
        }

    
}
